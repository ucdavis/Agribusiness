@model Site

@{
    ViewBag.Title = "Edit Site";
    ViewBag.SubPageTitle = "Edit Site";
}

@section ScriptContent
{
    <script type="text/javascript" src='@Url.Script("tiny_mce/jquery.tinymce.js")'></script>

    <script type="text/javascript">
        $(function () { 
            $("#Description").tinymce({
                script_url: '@Url.Script("tiny_mce/tiny_mce.js")',
                width: "500",

                // General options
                theme : "advanced",
                plugins : "pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",

                // Theme options
                theme_advanced_buttons1 : "bold,italic,underline,|,bullist,numlist,|,search,replace,|,preview,|,forecolor,backcolor",
                theme_advanced_buttons2 : "",
                theme_advanced_buttons3 : "",
                theme_advanced_toolbar_location : "top",
                theme_advanced_toolbar_align : "left",
                theme_advanced_statusbar_location : "bottom",
                theme_advanced_resizing : false
            });
        });
    </script>
}

@using (Html.BeginForm("Edit", "Site", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="control-group">
        <fieldset>
            <div class="control-group">
                <label for="id" class="control-label">Id:</label>
                @if (string.IsNullOrEmpty(Model.Id))
                {
                    <div class="controls">
                    @Html.TextBoxFor(model => model.Id, new { @class = "input-small" })
                    @Html.ValidationMessageFor(model => model.Id)    
                    </div>
                }
                else
                {
                    <div class="controls form-text">
                    @Model.Id
                    </div>
                }
            </div>
            <div class="control-group">
                <label for="name" class="control-label">Name:</label>
                <div class="controls">
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
            <div class="control-group">
                <label for="description" class="control-label">Description:</label>
                <div class="controls">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
            <div class="control-group">
                <label for="logo" class="control-label">Logo:</label>
                <div class="controls">
                    <input type="file" name="logo" class="input-file"/>
                </div>
            </div>
            <div class="control-group">
                <label for="splash" class="control-label">Splash:</label>
                <div class="controls">
                    <input type="file" name="splash" class="input-file"/>
                </div>
            </div>
            
            <div class="form-actions">
                <input type="submit" class="btn btn-primary" value="Save"/>
                @Html.ActionLink("Cancel", "Index", new { }, new { @class = "btn" })
            </div>
        </fieldset>
    </div>
}