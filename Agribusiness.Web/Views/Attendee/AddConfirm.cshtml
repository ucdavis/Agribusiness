@model AddConfirmViewModel

@{
    ViewBag.Title = "Add Attendee Confirm";
    ViewBag.SubPageTitle = "Add Attendee Confirm";
}

@section SubPageNavigation
{
    <ul class='nav nav-pills'>
        <li>@Html.ActionLink("Back To List", "Add", new { id = Model.Seminar.Id })</li>
    </ul>
}

@section ScriptContent
{
    <script type="text/javascript">
        $(function () {
            $("#Firm_Id").change(function () {

                var $this = $(this);
                var value = $this.find(':selected')[0].text;

                if (value == "Other") {
                    $(".firm").show('normal');
                } else {
                    $('.firm').hide('normal');
                    $('.firm').val('');
                }
            });
        });
    </script>
    
    <style type="text/css">
        .firm { display: none;}
    </style>
}

@Html.ValidationSummary(false)

@using (Html.BeginForm("AddConfirm", "Attendee", FormMethod.Post, new { @class = "form-horizontal" }))
{
    var newFirm = Model.Firm == null || Model.Firm.Id <= 0;
    @Html.AntiForgeryToken()
    @Html.Hidden("personId", Model.Person.Id)
    
    <div class="control-group">
        <fieldset>
            <div class="control-group">
                <label for="Name" class="control-label">Name</label>
                <div class="controls form-text">
                    @Model.Person.FullName
                </div>
            </div>
            <div class="control-group">
                <label for="Email" class="control-label">Email</label>
                <div class="controls form-text">
                    @Model.Person.User.LoweredUserName
                </div>
            </div>
            <div class="control-group">
                <label for="Title" class="control-label">Title</label>
                <div class="controls">
                    @Html.EditorFor(model => model.SeminarPerson.Title)
                    @Html.ValidationMessageFor(model => model.SeminarPerson.Title)
                </div>
            </div>
        </fieldset>
        
        <legend>Firm</legend>
        
        @{
            var css = "display: none;";
            var css2 = "display: none;";
            
            if (Model.Firm.Id == 0)
            {
                css = "display: inline-block;";
                css2 = "display: block;";
            }
        }

        <fieldset>
            <div class="control-group">
                <label for="Firm" class="control-label">Firm</label>
                <div class="controls">
                    @this.Select("Firm.Id").Options(Model.Firms, x=>x.Id, x=>x.Name).FirstOption("-1", "--Select Firm--").Selected(Model.Firm != null ? Model.Firm.Id.ToString() : string.Empty)
                    @Html.TextBox("Firm.Name", newFirm ? Model.Firm.Name : string.Empty, new{ @style=css, @class="firm"})
                    @Html.ValidationMessageFor(model => model.SeminarPerson.Firm)
                </div>
            </div>
            <div class="control-group firm" style='@css2'>
                <label for="Firm.Description" class="control-label">Description</label>
                <div class="controls">
                    @Html.EditorFor(model => model.Firm.Description)
                    @Html.ValidationMessageFor(model => model.Firm.Description)
                </div>
            </div>
            <div class="control-group firm" style='@css2'>
                <label for="Firm_WebAddress" class="control-label">Web Address</label>
                <div class="controls">
                    @Html.EditorFor(model => model.Firm.WebAddress)
                    @Html.ValidationMessageFor(model => model.Firm.WebAddress)
                </div>
            </div>
        </fieldset>

    </div>
    
    <div class="form-actions">
        <input type="submit" value="Add Attendee" class="btn btn-primary"/>
        @Html.ActionLink("Cancel", "Add", new { id = Model.Seminar.Id }, new {@class="btn"})
    </div>
    
}
