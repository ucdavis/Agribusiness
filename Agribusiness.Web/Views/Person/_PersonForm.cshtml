@model Agribusiness.Web.Models.PersonViewModel

    @Html.ValidationSummary(false)

	@Html.AntiForgeryToken()
	@Html.Hidden("seminarPersonId", Model.SeminarPerson != null ? Model.SeminarPerson.Id : -1)

	<fieldset>
		<legend>Personal Information</legend>
		<ul>
			<li><div class="editor-label required">
                    @Html.LabelFor(a=>a.Person.FirstName)
                    <span>*</span>
                </div>
                <div class="editor-field">
				    @Html.EditorFor(a=>a.Person.FirstName)
				    @Html.ValidationMessageFor(a=>a.Person.FirstName)
                </div>
			</li>
			<li><div class="editor-label">
                    @Html.LabelFor(a=>a.Person.MI)
                </div>
                <div class="editor-field">
				    @Html.EditorFor(a=>a.Person.MI)
				    @Html.ValidationMessageFor(a=>a.Person.MI)
                </div>
			</li>
			<li><div class="editor-label required">
                    @Html.LabelFor(a=>a.Person.LastName)
                    <span>*</span>
                </div>
                <div class="editor-field">
				    @Html.EditorFor(a=>a.Person.LastName)
				    @Html.ValidationMessageFor(a=>a.Person.LastName)
                </div>
			</li>
			<li><div class="editor-label">
                    @Html.LabelFor(a => a.Person.Salutation)
                </div>
                <div class="editor-field">
				    @Html.EditorFor(a=>a.Person.Salutation)
				    @Html.ValidationMessageFor(a=>a.Person.Salutation)
                </div>
			</li>
			<li><div class="editor-label">
                    @Html.LabelFor(a=>a.Person.BadgeName)
                </div>
                <div class="editor-field">
				    @Html.EditorFor(a=>a.Person.BadgeName)
				    @Html.ValidationMessageFor(a=>a.Person.BadgeName)
                </div>
			</li>
		</ul>
	</fieldset>
	
	<fieldset>
		<legend>Contact Information</legend>

		<ul>
            <li><div class="editor-label required">
                    @Html.LabelFor(a=>a.Email)
                    <span>*</span>
                </div>
                <div class="editor-field">
                    @Html.EditorFor(a=>a.Email)
                    @Html.ValidationMessageFor(a=>a.Email)
                </div>
            </li>
			<li><div class="editor-label required">
                    @Html.LabelFor(a=>a.Person.Phone)
                    <span>*</span>
                </div>
                <div class="editor-field">
				    @Html.EditorFor(a=>a.Person.Phone)
				    @Html.ValidationMessageFor(a=>a.Person.Phone)
                </div>
			</li>
            <li><div class="editor-label">@Html.LabelFor(a=>a.Person.PhoneExt)</div>
                <div class="editor-field">@Html.TextBoxFor(a=>a.Person.PhoneExt)</div>
            </li>
			<li><div class="editor-label">
                    @Html.LabelFor(a=>a.Person.CellPhone)
                </div>
                <div class="editor-field">
				    @Html.EditorFor(a=>a.Person.CellPhone)
				    @Html.ValidationMessageFor(a=>a.Person.CellPhone)
                </div>
			</li>
			<li><div class="editor-label">
                    @Html.LabelFor(a=>a.Person.Fax)
                </div>
                <div class="editor-field">
				    @Html.EditorFor(a=>a.Person.Fax)
				    @Html.ValidationMessageFor(a=>a.Person.Fax)
                </div>
			</li>
		</ul>

        @for (int i = 0; i < Model.Contacts.Count(); i++ )
        { 
            var required = Model.Contacts[i].ContactType.Required;
            
            <h3>@Model.Contacts[i].ContactType.Name</h3>
                        
            @Html.Hidden(string.Format("Contacts[{0}].ContactType", i), Model.Contacts[i].ContactType.Id)
            <ul>
                <li><div class="editor-label @(required ? "required" : string.Empty)">
                        @Html.LabelFor(a => a.Contacts[i].FirstName)
                        @if (required){<span>*</span>}
                    </div>
                    <div class="editor-field">@Html.TextBox(string.Format("Contacts[{0}].FirstName", i), Model.Contacts[i].FirstName)</div>
                </li>
                <li><div class="editor-label @(required ? "required" : string.Empty)">
                        @Html.LabelFor(a => a.Contacts[i].LastName)
                        @if (required){<span>*</span>}
                    </div>
                    <div class="editor-field">@Html.TextBox(string.Format("Contacts[{0}].LastName", i), Model.Contacts[i].LastName)</div>
                </li>
                <li><div class="editor-label @(required ? "required" : string.Empty)">
                        @Html.LabelFor(a => a.Contacts[i].Phone)
                        @if (required){<span>*</span>}
                    </div>
                    <div class="editor-field">@Html.TextBox(string.Format("Contacts[{0}].Phone", i), Model.Contacts[i].Phone)</div>
                </li>
                <li><div class="editor-label">@Html.LabelFor(a=>a.Contacts[i].Ext)</div>
                    <div class="editor-field">
                        @Html.TextBox(string.Format("Contacts[{0}].Ext", i), Model.Contacts[i].Ext)
                    </div>
                </li>
                <li><div class="editor-label">@Html.LabelFor(a => a.Contacts[i].Email)</div>
                    <div class="editor-field">@Html.TextBox(string.Format("Contacts[{0}].Email", i), Model.Contacts[i].Email)</div>
                </li>
            </ul>
        }

    </fieldset>

    <fieldset>
        <legend>Addresses</legend>

		@for (int i = 0; i < Model.Addresses.Count(); i++)
        {
            var required = Model.Addresses[i].AddressType.Required;
      
			<h4>@string.Format("{0} Address", Model.Addresses[i].AddressType.Name)</h4>
  
            if(!string.IsNullOrWhiteSpace(Model.Addresses[i].AddressType.Description))
            {
                <p>@Model.Addresses[i].AddressType.Description</p>
            }
      
			<input type="hidden" id='@string.Format("Addresses_{0}__AddressType", i)' name='@string.Format("Addresses[{0}].AddressType", i)' value='@Model.Addresses[i].AddressType.Id' />
			
			<ul>
				<li><div class="editor-label @(required ? "required" : string.Empty)">
                    @Html.LabelFor(a => a.Addresses[i].Line1)
                    @if (required)
                    {<span>*</span>}
                    </div>
                    <div class="editor-field">
					@Html.TextBox(string.Format("Addresses[{0}].Line1", i), Model.Addresses[i].Line1)
                    </div>
				</li>
				<li><div class="editor-label">
                    @Html.LabelFor(a => a.Addresses[i].Line2)
                    </div>
                    <div class="editor-field">
					@Html.TextBox(string.Format("Addresses[{0}].Line2", i), Model.Addresses[i].Line2)
                    </div>
				</li>
				<li><div class="editor-label @(required ? "required" : string.Empty)">
                    @Html.LabelFor(a => a.Addresses[i].City)
                    @if (required)
                    {<span>*</span>}
                    </div>
                    <div class="editor-field">
					@Html.TextBox(string.Format("Addresses[{0}].City", i), Model.Addresses[i].City)
                    </div>
				</li>
				<li><div class="editor-label @(required ? "required" : string.Empty)">
                    @Html.LabelFor(a => a.Addresses[i].State)
                    @if (required)
                    {<span>*</span>}
                    </div>
                    <div class="editor-field">
                        @Html.TextBox(string.Format("Addresses[{0}].State", i), Model.Addresses[i].State)
                    </div>
				</li>
				<li><div class="editor-label @(required ? "required" : string.Empty)">
                    @Html.LabelFor(a => a.Addresses[i].Zip)
                    @if (required)
                    {<span>*</span>}
                    </div>
                    <div class="editor-field">
					@Html.TextBox(string.Format("Addresses[{0}].Zip", i), Model.Addresses[i].Zip)
                    </div>
				</li>
                <li><div class="editor-label @(required ? "required" : string.Empty)">
                        @Html.LabelFor(a => a.Addresses[i].Country)
                        @if (required)
                        {<span>*</span>}
                    </div>
                    <div class="editor-field">
                        @{  var ss = Model.Addresses.ElementAtOrDefault(i);
                            var country = ss.Country;}
                        @this.Select(string.Format("Address[{0}].Country", i)).Options(Model.Countries, x => x.Id, x => x.Name).FirstOption("--Select a Country--").Selected(country != null ? country.Id : "USA")
                    </div>
                </li>
			</ul>
        }
	</fieldset>
	
    <fieldset>
        <legend>Firm Information</legend>

        <p style="margin-bottom: 2em;">
            Please select your firm from the pop-up list and make any necessary changes below.  If your firm does not appear, select "Other" and fill in the requested information.
        </p>

        <div class="text_btn" id="selectFirm_btn">
            <a href="javascript:;">Select a Firm</a>
            <span style="color:Red;">*</span>
        </div>
        

        <div id="firm_dialog" title="Select a Firm">
            <p>
            @this.Select("Firm").Options(Model.Firms, x => x.Id, x => x.Name).FirstOption("--Select a Firm--")
            </p>
        </div>


        @{
            // check and see if it's an existing firm, true if existing firm
            var existing = Model.Firm.Id > 0;
            // check if it's a new firm, true if not existing
            var newFirm = Model.Firm.Id <= 0 && !string.IsNullOrWhiteSpace(Model.Firm.Name) && !string.IsNullOrWhiteSpace(Model.Firm.Description);

            var displayExisting = !existing ? "display:none;" : "";
            var displayNew = !newFirm ? "display:none;" : "";

            var combined = existing && newFirm ? "display:none;" : "";

            var existingFirmName = Model.Firm != null ? Model.Firm.Name : string.Empty;
        }

        <div class="display-form" id="existingFirmInformation" style='@displayExisting' >
        @Html.Hidden("Firm", Model.Firm.Id)
        <ul>
            <li><div class="display-label">Firm Name:</div>
                <div class="display-details"><span id="firmName">@existingFirmName</span></div>
            </li>
        </ul>
        </div>

        @* Only needed if firm name has not been selected *@
        <ul id="firmInformation" style='@displayNew'>
            <li><div class="editor-label required">Firm Name:<span>*</span></div>
                <div class="editor-field">
                    @Html.TextBox("FirmName", newFirm ? Model.Firm.Name : string.Empty)
                </div>
            </li>
            <li><div class="editor-label required">Business Type/Firm Description:<span>*</span></div>
                <div class="editor-field">
                    @*<textarea name='Firm.Description' id='Firm_Description' value='@Model.Firm.Name' ></textarea>*@
                    @Html.TextArea("FirmDescription", newFirm ? Model.Firm.Description : string.Empty)
                </div>
            </li>
        </ul>

        @* Job Information *@
        <ul id="jobInformation" style='@combined'>
            <li><div class="editor-label required">Job Title:<span>*</span></div>
                <div class="editor-field">@Html.TextBox("Title", Model.SeminarPerson != null ? Model.SeminarPerson.Title : string.Empty)</div>
            </li>
        </ul>

    </fieldset>

    <fieldset>
        <legend>Commodities</legend>

        <ul class="commodities">
        
            @foreach (var c in Model.Commodities)
            {
                var selected = Model.SeminarPerson != null && Model.SeminarPerson.Commodities.Contains(c) ? "checked" : string.Empty;
                
                <li>
                    <input type="checkbox" name="Commodities" value='@c.Id' @selected />
                    @c.Name
                </li>
            }

        </ul>

    </fieldset>

	<fieldset>
		<legend>Profile Picture</legend>
		<ul>
		<li><div class="editor-label"><label>&nbsp;</label></div>
		    <div class="editor-field"><input type="file" name="profilepic" id="profilepice" /></div>
		</li>
		</ul>
	</fieldset>
	
	<fieldset>
		<ul>
			<li><div class="editor-label"><label>&nbsp;</label></div>
				<div class="editor-field">
                <input type="submit" value="save" class="button" /> |

                @if (Model.SeminarPerson == null)
                {
                @Html.ActionLink("Cancel", "Index", "Attendee", new { id = Model.Seminar.Id }, new { })
                }
                else
                { 
                @Html.ActionLink("Cancel", "Index")
                }
                </div>
			</li>
		</ul>
	</fieldset>


<style type="text/css">
    .commodities li
    {
        float:left;
        display:inline-block;
        width: 210px;
    }
</style>

<script type="text/javascript">
    $(function () {
        $("#firm_dialog").dialog({
            autoOpen: false,
            modal: true,
            buttons: {
                "Confirm": selectFirm,
                Cancel: function () { $(this).dialog("close"); }
            }
        });

        $("#selectFirm_btn").click(function () {
            $("#firm_dialog").dialog("open");
        });
    });

    function selectFirm() {

        var dropDown = $(this).find("select");

        // hide the existing firms
        $("#existingFirmInformation").hide();
        $("#firmInformation").hide();
        $("#firmAddress").hide();
        $("#jobInformation").hide();

        // blank out the other txt boxes
        $("#Firm").val("");
        $("#Firm_Name").val("");
        $("#Firm_Description").val("");

        // make sure a firm has been selected
        if (dropDown.val() != "" && dropDown.val() != "0") {

            // display the correct form
            $("#firmName").html($(dropDown).find(":selected").text());
            $("#Firm").val($(dropDown).val());
            $("#existingFirmInformation").show();

        }
        // selected other
        else if (dropDown.val() == "0") {

            $("#firmInformation").show();

        }
        // did not select a firm or other
        else {
            alert("no firm selected");
            return;
        }

        $("#jobInformation").show();
        $(this).dialog("close");
    }
</script>