@using Agribusiness.Web.Services
@model ApplicationViewModel

@{
    var title = string.Format("Apply for {0}", Model.Seminar.Site.EventType);

    ViewBag.Title = title;
    ViewBag.SubPageTitle = title;

    var siteId = ViewData["site"] as string;
    var site = SiteService.LoadSite(siteId);
}

@section SubPageNavigation
{
    <ul class="nav nav-pills">
        <li>@Html.ActionLink("Back to Home", "Index", "Authorized")</li>
    </ul>
}

@section ScriptContent{

    <script type="text/javascript">
        $(function () {
            $("#Application_Firm").change(function (e) {
                if ($(this).val() == '0') {
                    $("#firmInformation").show('normal');
                } else {
                    $("#firmInformation").hide('normal');
                    $("#Application_FirmName").val('');
                    $("#Application_FirmDescription").val('');
                }
            });

            $("#Application_FirmType").change(function (e) {
                if ($(this).find("option:selected").text() == 'Other') {
                    $("#firmtype-other").show('normal');
                } else {
                    $("#firmtype-other").hide('normal');
                    $("#Application_OtherFirmType").val('');
                }
            });

            $("#Application_OtherCommodity").bind("focus blur keyup", function () {
                if ($(this).val() != "") { $("#commodity-other").attr("checked", "checked"); }
                else $("#commodity-other").removeAttr("checked");
            });
        });
    </script>
}

@Html.ValidationSummary(false, "Please correct the following errors:")

@using (Html.BeginForm("Apply", "SeminarApplication", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
{
	@Html.AntiForgeryToken()
	
    <div class="control-group">
        <fieldset>
            <legend>Personal Information</legend>
            <div class="control-group">
                <label class="control-label" for="Application.FirstName">First Name<span class="required">*</span></label>
                <div class="controls">
                    @Html.EditorFor(model => model.Application.FirstName)
                    @Html.ValidationMessageFor(model => model.Application.FirstName)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="Application.MI">MI</label>
                <div class="controls">
                    @Html.EditorFor(model => model.Application.MI)
                    @Html.ValidationMessageFor(model => model.Application.MI)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="Application.LastName">Last Name<span class="required">*</span></label>
                <div class="controls">
                    @Html.EditorFor(model => model.Application.LastName)
                    @Html.ValidationMessageFor(model => model.Application.LastName)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="Application.BadgeName">Badge Name</label> 
                <div class="controls">
                    @Html.EditorFor(model => model.Application.BadgeName)
                    @Html.ValidationMessageFor(model => model.Application.BadgeName)
                </div>
            </div>
        </fieldset>
    
        <fieldset>
            <legend>Firm Information</legend>
        
            <p class="well">
                Please select your firm from the list and make any necessary changes below.  If your firm does not appear, select "Other" and fill in the requested information.
            </p>
            
            <div class="control-group">
                <label class="control-label" for="firm">Firm <span class="required">*</span></label>
                <div class="controls">@this.Select("Application.Firm").Options(Model.Firms, x => x.Id, x => x.Name).FirstOption("--Select a Firm--")</div>
            </div>
            
            @{
            var existing = Model.Application.Firm == null;
            var newFirm = string.IsNullOrWhiteSpace(Model.Application.FirmName) && string.IsNullOrWhiteSpace(Model.Application.FirmDescription);

            var displayExisting = existing ? "display:none;" : "";
            var displayNew = newFirm ? "display:none;" : "";

            var combined = existing && newFirm ? "display:none;" : "";

            var existingFirmName = Model.Application.Firm != null ? Model.Application.Firm.Name : string.Empty;
            }
            
            <div id="firmInformation" style='@displayNew' class="control-group">
                <div class="control-group">
                    <label class="control-label" for="Application.FirmName">Firm Name<span class="required">*</span></label>
                    <div class="controls">
                        @Html.TextBox("Application.FirmName", Model.Application.FirmName)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.FirmDescription">Description<span class="required">*</span></label>
                    <div class="controls">
                        @Html.TextArea("Application.FirmDescription", Model.Application.FirmDescription)
                    </div>
                </div>
            </div>
            
            <div id="jobInformation" class="control-group">
                <div class="control-group">
                    <label class="control-label" for="Application.FirmType">Firm Type<span class="required">*</span></label>
                    <div class="controls">
                        @this.Select("Application.FirmType").Options(Model.FirmTypes, x => x.Id, x => x.Name).FirstOption("--Select Firm Type--").Selected(Model.Application.FirmType != null ? Model.Application.FirmType.Id.ToString() : string.Empty).Class("required")

                        <span id="firmtype-other" style="@(Model.Application.FirmType != null && Model.Application.FirmType.Name == "Other" ? "display: inline-block;" : "display: none;")">
                            <input type="text" id="Application_OtherFirmType" name="Application.OtherFirmType" placeholder="Firm Type" value="@Model.Application.OtherFirmType" class="hastip" title="Please enter the type of your firm." />
                        </span>

                        @Html.ValidationMessageFor(a => a.Application.FirmType)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.Website">Website</label>
                    <div class="controls">
                        @Html.TextBoxFor(a => a.Application.Website)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.JobTitle">Job Title<span class="required">*</span></label>
                    <div class="controls">
                        @Html.TextBoxFor(a => a.Application.JobTitle)
                        @Html.ValidationMessageFor(a => a.Application.JobTitle)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.Responsibilities">Responsibilities<span class="required">*</span></label>
                    <div class="controls">
                        @Html.TextAreaFor(a => a.Application.Responsibilities)
                        @Html.ValidationMessageFor(a => a.Application.Responsibilities)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.FirmPhone">Firm Phone<span class="required">*</span></label>
                    <div class="controls">
                        @Html.TextBoxFor(a => a.Application.FirmPhone, new { placeholder = "eg. (555) 555-5555" })
                        @Html.ValidationMessageFor(a => a.Application.FirmPhone)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.FirmPhoneExt">Ext.</label>
                    <div class="controls">
                        @Html.TextBoxFor(a => a.Application.FirmPhoneExt)
                        @Html.ValidationMessageFor(a => a.Application.FirmPhoneExt)
                    </div>
                </div>
            </div>

            <div id="firmAddress" class="control-group">
                <div class="control-group">
                    <label class="control-label" for="Application.FirmAddressLine1">Address Line 1<span class="required">*</span></label>
                    <div class="controls">
                        @Html.TextBoxFor(a => a.Application.FirmAddressLine1)
                        @Html.ValidationMessageFor(a => a.Application.FirmAddressLine1)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.FirmAddressLine2">Address Line 2</label>
                    <div class="controls">
                        @Html.TextBoxFor(a => a.Application.FirmAddressLine2)
                        @Html.ValidationMessageFor(a => a.Application.FirmAddressLine2)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.FirmCity">City<span class="required">*</span></label>
                    <div class="controls">
                        @Html.TextBoxFor(a => a.Application.FirmCity)
                        @Html.ValidationMessageFor(a => a.Application.FirmCity)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.FirmState">State<span class="required">*</span></label>
                    <div class="controls">
                        @Html.TextBoxFor(a => a.Application.FirmState)                    
                        @Html.ValidationMessageFor(a => a.Application.FirmState)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Application.FirmZip">Zip<span class="required">*</span></label>
                    <div class="controls">
                        @Html.TextBoxFor(a => a.Application.FirmZip)
                        @Html.ValidationMessageFor(a => a.Application.FirmZip)    
                    </div>
                </div>
                <div class="editor-label">
                    <label for="Application.Country" class="control-label">Country<span class="required">*</span></label>
                    <div class="controls">
                        @this.Select("Application.Country").Options(Model.Countries, x => x.Id, x => x.Name).FirstOption("--Select a Country--").Selected(Model.Application.Country != null ? Model.Application.Country.Id : "USA")
                        @Html.ValidationMessageFor(a => a.Application.Country)
                    </div>
                </div>
            </div>

        </fieldset>
    
        <fieldset>
            <legend>Commodities Important to your Business</legend>
            <p class="well">Please check all commodities that apply to your firm.</p>
            @{
                var batchsize = (int)Math.Ceiling((decimal)Model.Commodities.Count()/4);
            }
            
            <div class="row-fluid">
                @for (var i = 0; i < 4; i++)
                {
                    <div class="span3">
                        <ul class="unstyled">
                            @foreach (var c in Model.Commodities.Skip(i * batchsize).Take(batchsize))
                            {
                                <li>
                                    @{var selected = Model.Application.Commodities.Contains(c) ? "checked" : string.Empty;}
                                    <label class="checkbox">
                                        <input type="checkbox" name="Application.Commodities" value='@c.Id' @selected />
                                        @c.Name
                                    </label>
                                </li>    
                            }
                        </ul>
                    </div>
                }
                <div class="span12">
                    <div class="control-group">
                        <div class="controls" style="display: inline-block">
                            <label class="checkbox">
                                <input type="checkbox" id="commodity-other" @(!string.IsNullOrWhiteSpace(Model.Application.OtherCommodity) ? "checked" : string.Empty) />
                                Other                                
                            </label>                            
                        </div>
                        <div style="display: inline-block">
                            <input type="text" id="Application_OtherCommodity" name="Application.OtherCommodity" class="hastip" title="Please enter commodities not listed above.  If entering more than one please seperate by commas." />
                        </div>
                    </div>
                </div>
            </div>
        
        </fieldset>
        
        <fieldset>
            <legend>Communication Option</legend>

            <p class="well">Please choose your preference for receiving communications from us.  If selecting "Assistant", all communications will only be sent to the assistant listed below.  If selecting "Carbon Copy Assistant", all communications will be sent to both you and the assistant listed below.  If selecting "Directly", all communications will only be sent to you.</p>

            <div class="control-group">
                <label for="communicationoption" class="control-label"><span class="required">*</span></label>
                <div class="controls">
                    @this.Select("Application.CommunicationOption").Options(Model.CommunicationOptions, x => x.Id, x => x.Name).FirstOption("--Select Communication Option--").Selected(Model.Application.CommunicationOption != null ? Model.Application.CommunicationOption.Id : string.Empty)    
                    @Html.ValidationMessageFor(a => a.Application.CommunicationOption)
                </div>
            </div>

        </fieldset>
        
        <fieldset>
            <legend>Assistant</legend>
            <div class="control-group">
                <label class="control-label" for="Application.AssistantFirstNam">First Name</label>
                <div class="controls">
                    @Html.EditorFor(model => model.Application.AssistantFirstName)
                    @Html.ValidationMessageFor(model => model.Application.AssistantFirstName)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="Application.AssistantLastName">Last Name</label>
                <div class="controls">
                    @Html.EditorFor(model => model.Application.AssistantLastName)
                    @Html.ValidationMessageFor(model => model.Application.AssistantLastName)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="Application.AssistantPhone">Phone</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.Application.AssistantPhone, new { placeholder = "eg. (555) 555-5555" })
                    @Html.ValidationMessageFor(model => model.Application.AssistantPhone)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="Application.AssistantEmail">Email</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.Application.AssistantEmail, new { placeholder = "eg. you@example.com" })
                    @Html.ValidationMessageFor(model => model.Application.AssistantEmail)
                </div>  
            </div>
        </fieldset>
        
        <fieldset>
            <legend>Seminar Expectations</legend>

            <p class="well">
                Please tell us your expectations of the @site.Name and how it may benefit you and your organization.
            </p>

            <div class="control-group">
                <label class="control-label" for="Application.Expectations">Expectations</label>
                <div class="controls">
                    @Html.TextAreaFor(model => model.Application.Expectations)
                    @Html.ValidationMessageFor(model => model.Application.Expectations)
                </div>
            </div>
        </fieldset>
        
        <fieldset>
            <legend>Photo</legend>

            <p class="well">
                @if (Model.HasPhoto)
                { 
                    <text>You have a photo on file, if you would like to update the photo, please upload a new one.</text>
                }
                else
                { 
                    <text>You do not have a photo on file, please upload a new one.</text>
                }
                If you do not wish to upload a file now, you can upload a new photo at anytime through your profile manager.
            </p>
            
            <div class="row-fluid">
                <div class="span4"><img src="@Url.Action("GetThumbnail", "Person", new { id = Model.PersonId })" alt="Profile Picture" /></div>
                <div class="span8"><input type="file" id="file" name="file" /></div>
            </div>
        </fieldset>
        
        <fieldset>
            <legend>Contact Information Release</legend>

            <p class="well">
                I authorize the UC Davis @site.Name to share my contact information through this website with other attendees.  Information that will be
                shared include Email, Phone, Address and Website.  
            </p>
            
            <div class="control-group">
                <div class="controls">
                    <label class="checkbox">
                        @Html.CheckBoxFor(a => a.Application.ContactInformationRelease) 
                        I Agree
                    </label>
                </div>
            </div>

        </fieldset>
        
        <fieldset>
            <legend>Seminar Information</legend>

            <p class="well">
                A seminar fee of @string.Format("{0:C}", Model.Seminar.Cost) covers all study materials, instruction, meals, and receptions, but excludes lodging. 
                Upon acceptance, the fee is due by @(Model.Seminar.PaymentDeadline.HasValue ? Model.Seminar.PaymentDeadline.Value.ToShortDateString() : "TBD"). 
                @if (siteId != "workshop")
                {<span>
                    In the event a participant needs to cancel, the fee is fully refundable until @(Model.Seminar.PaymentDeadline.HasValue ? Model.Seminar.PaymentDeadline.Value.ToShortDateString() : "TBD").
                    No refunds are possible for a cancellation received after @(Model.Seminar.PaymentDeadline.HasValue ? Model.Seminar.PaymentDeadline.Value.ToShortDateString() : "TBD").
                    Credit cards and checks will be accepted.
                </span>
                }
                @if (Model.Seminar.RequireApproval)
                {
                    <text>Decisions will be made by @(@Model.Seminar.AcceptanceDate.HasValue ? Model.Seminar.AcceptanceDate.Value.ToShortDateString() : "TBD").</text>
                }
            </p>

            <div class="control-group">
                <div class="controls">
                    <label class="checkbox">
                        @Html.CheckBox("SeminarTerms", Model.SeminarTerms, new { @class = "required" })
                        I Understand the terms of this application listed above.
                    </label>
                    @Html.ValidationMessage("SeminarTerms")
                </div>
            </div>
        </fieldset>
    </div>
    
    <div class="form-actions">
        <input class="btn btn-primary" type="submit" value="Create" />
        @Html.ActionLink("Cancel", "Index", "Authorized", new {}, new {@class="btn"})
    </div>
}

