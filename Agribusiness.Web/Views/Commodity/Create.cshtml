@model CommodityViewModel

@{
	ViewBag.Title = "Create Commodity";
    ViewBag.SubPageTitle = "Create Commodity";
}

@section SubPageNavigation
{
	<ul class="navigation">
		<li>@Html.ActionLink("Back to List", "Index")</li>
	</ul>
}

@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
    <fieldset>
    @* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
    Example: Dinosaur 1  *@
	    <legend>Commodity</legend>
	    @*<h4>Form Header</h4>*@
	    @*<p>Be specific so the user understands what exactly you are looking for.  Example: After Dinosaur 1 moves out of his/her parents' den what will Dinosaur 1 do?  We need to know his employment plan, feeding area, as well as living situation.  This information will not be sold or given to carnivores.</p>*@
	    <p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>
	    <ul>
		    <li>
			    <div class="editor-label required">
				    @Html.LabelFor(model => model.Commodity.Name)<span>*</span> 
			    </div>
			    <div class="editor-field">
				    @Html.EditorFor(model => model.Commodity.Name)
				    @Html.ValidationMessageFor(model => model.Commodity.Name)
			    </div>
		    </li>
		    <li>
			    <div class="editor-label">
				    @Html.LabelFor(model => model.Commodity.IsActive) 
			    </div>
			    <div class="editor-field">
				    @Html.EditorFor(model => model.Commodity.IsActive)
				    @Html.ValidationMessageFor(model => model.Commodity.IsActive)
			    </div>
		    </li>
		    <li>
			    @* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
			    <div class="editor-label">&nbsp;</div>
			    <div class="editor-field">
			    <input class="button" type="submit" value="Create" /> | @Html.ActionLink("Cancel", "Index")
			    </div>
		    </li>
	    </ul>
    </fieldset>
}


